{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","redux/ActionCreators.js","redux/actionTypes.js","components/HeaderComponent.js","components/hook/LoginHook.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/service/Modal.js","components/service/ServiceDetails.js","components/service/RenderService.js","components/service/ServiceComponent.js","components/hook/TestHook.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/services.js","redux/forms.js","redux/login.js","redux/configureStore.js","App.js","registerServiceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderDish","in","transformProps","exitTransform","CardBody","CardText","description","RenderComments","comments","postComment","dishId","commentList","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","Col","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","Component","dishesLoading","dispatch","dishesFailed","errmess","payload","addDishes","addComment","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leaders","fetchServices","servicesLoading","fetch","then","response","ok","error","Error","status","statusText","errorMessage","json","services","addServices","catch","servicesFailed","message","loginLoading","loginFailed","postLogin","userName","passWord","newLogin","email","password","method","body","JSON","stringify","headers","credentials","fetchLogin","logins","addLogins","Header","connect","login","username","useState","setlogin","load","setLoad","setErr","useEffect","res","data","err","isNavOpen","loginMsg","toggleNav","handleLogin","successMess","localStorage","setItem","alert","getItem","evt","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","widtg","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","remember","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesErrMess","promotion","promosErrMess","leader","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","resetFeedbackForm","role","size","offset","checkbox","About","RenderLeader","Media","tag","left","middle","object","heading","CardHeader","title","list","ModalC","modal","nestedModal","closeAll","toggleNested","toggleAll","prevState","buttonLabel","onClosed","undefined","ModalFooter","RenderService","service","serviceImage","serviceName","serviceDescription","ServiceDet","serviceCategory","serviceLabel","serviceRating","featured","Service","i","sm","TestHook","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","promotions","promo","exact","match","parseInt","params","commentsErrMess","s","serviceId","withRouter","newComment","toISOString","console","log","actions","reset","feedback","newFeedback","Object","assign","Dishes","action","Comments","concat","Promotions","Leaders","Services","InitialFeedback","firstname","lastname","telnum","agree","contactType","Login","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.26061a04.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n};","\r\n// Non Auth api\r\n// export const baseUrl = 'https://jsonserverashitech.herokuapp.com/';\r\n\r\n// Auth api\r\n// export const baseUrl = 'https://jsonserverashitechauth.herokuapp.com/';\r\n\r\n\r\n\r\nexport const baseUrl = 'https://jsonserverashitech.herokuapp.com/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = props => {\r\n    const menu = props.dishes.dishes.map(dish => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        )\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\n// import { baseUrl } from '../shared/baseUrl'; <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <FadeTransform in transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n            <Card>\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    var commentList = comments.map(comment => {\r\n        return (\r\n            <Fade in key={comment.id}>\r\n                <li >\r\n                    {comment.comment}\r\n                    <br /><br />\r\n                    -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\r\n                    <br /><br />\r\n                </li>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                    {commentList}\r\n                </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DishDetail = props => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nexport class CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"> Submit comment</span>\r\n                </Button>\r\n\r\n                <div className=\"row row-content\">\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}> Submit comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"col-12 col-md-9\">\r\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"rating\">Rating</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.select model=\".rating\" name=\"rating\" className=\"form-control\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                            </Control.select>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"author\" md={2}>Your name</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\r\n                                            <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"feedback\" md={2}>Your feedback</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" validators={{ required }} />\r\n                                            <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                                </LocalForm>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as ActionTypes from \"./actionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DISHES\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n  dispatch(dishesLoading(true));\r\n\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((dishes) => dispatch(addDishes(dishes)))\r\n    .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => (dispatch) => ({\r\n  type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes,\r\n});\r\n\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COMMENTS\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment,\r\n  };\r\n\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addComment(response)))\r\n    .catch((error) => {\r\n      console.log(\"Post comments: \" + error.message);\r\n      alert(\"Comments could not be posted:\\n\" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n\r\n    .then((response) => response.json())\r\n    .then((comments) => dispatch(addComments(comments)))\r\n    .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments,\r\n});\r\n\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~PROMOS\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n  dispatch(promosLoading(true));\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n\r\n    .then((response) => response.json())\r\n    .then((promos) => dispatch(addPromos(promos)))\r\n    .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => (dispatch) => ({\r\n  type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos,\r\n});\r\n\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LEADERS\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading(true));\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n\r\n    .then((response) => response.json())\r\n    .then((leaders) => dispatch(addLeaders(leaders)))\r\n    .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => (dispatch) => ({\r\n  type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders,\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n  const newFeedback = Object.assign(\r\n    { date: new Date().toISOString() },\r\n    feedback\r\n  );\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addComment(response)))\r\n    .catch((error) => {\r\n      console.log(\"Post feedback: \" + error.message);\r\n      alert(\"Feedback could not be posted:\\n\" + error.message);\r\n    });\r\n};\r\n\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SERVICE~~~~~~~~~~~~~~~~\r\nexport const addService = (service) => ({\r\n  type: ActionTypes.ADD_SERVICE,\r\n  payload: service,\r\n});\r\n\r\nexport const addServices = (services) => ({\r\n  type: ActionTypes.ADD_SERVICES,\r\n  payload: services,\r\n});\r\n\r\nexport const fetchServices = () => (dispatch) => {\r\n  dispatch(servicesLoading(true));\r\n\r\n  return fetch(baseUrl + \"services\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n\r\n    .then((response) => response.json())\r\n    .then((services) => dispatch(addServices(services)))\r\n    .catch((error) => dispatch(servicesFailed(error.message)));\r\n};\r\n\r\nexport const servicesLoading = () => (dispatch) => ({\r\n  type: ActionTypes.SERVICES_LOADING,\r\n});\r\n\r\nexport const servicesFailed = (errmess) => ({\r\n  type: ActionTypes.SERVICES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const postService = (service) => (dispatch) => {\r\n  const newService = Object.assign({ date: new Date().toISOString() }, service);\r\n\r\n  return fetch(baseUrl + \"service\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newService),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addService(response)))\r\n    .catch((error) => {\r\n      console.log(\"Service feedback: \" + error.message);\r\n      alert(\"Service could not be posted:\\n\" + error.message);\r\n    });\r\n};\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SERVICE~~~~~~~~~~~~~~~~\r\n\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~LOGIN~~~~~~~~~~~~~~~~~~\r\n\r\nexport const loginLoading = () => (dispatch) => ({\r\n  type: ActionTypes.LOGIN_LOADING,\r\n});\r\n\r\nexport const loginFailed = (errmess) => ({\r\n  type: ActionTypes.LOGIN_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const loginSuccess = (sucess) => ({\r\n  type: ActionTypes.LOGIN_SUCCESS,\r\n  payload: sucess,\r\n});\r\n\r\nexport const postLogin = (userName, passWord) => (dispatch) => {\r\n  dispatch(loginLoading);\r\n\r\n  const newLogin = {\r\n    email: userName,\r\n    password: passWord,\r\n  };\r\n\r\n  return fetch(\"https://jsonserverashitech.herokuapp.com/login\", {\r\n    method: \"POST\",\r\n    //mode: \"cors\",\r\n    body: JSON.stringify(newLogin),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // \"Access-Control-Allow-Origin\": \"http://localhost:3000/home\",\r\n      // \"Access-Control-Allow-Credentials\": \"true\",\r\n      // \"Access-Control-Allow-Methods\": \"GET,POST,PUT\",\r\n\r\n      // \"Access-Control-Allow-Headers\":\r\n      //   \"x-csrf-token,authorization,content-type,accept,origin,x-requested-with,access-control-allow-origin\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(loginSuccess(response)))\r\n    .catch((error) => dispatch(loginFailed(error.message)));\r\n};\r\n\r\nexport const addLogins = (logins) => ({\r\n  type: ActionTypes.ADD_LOGINS,\r\n  payload: logins,\r\n});\r\n\r\nexport const fetchLogin = () => (dispatch) => {\r\n  dispatch(loginLoading);\r\n\r\n  return fetch(baseUrl + \"users\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n      }\r\n    )\r\n\r\n    .then((response) => response.json())\r\n    .then((logins) => dispatch(addLogins(logins)))\r\n    .catch((error) => dispatch(loginFailed(error.message)));\r\n};\r\n","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING ='PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED ='PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED ='LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n\r\nexport const ADD_SERVICE = 'ADD_SERVICE';\r\nexport const ADD_SERVICES = 'ADD_SERVICES';\r\nexport const SERVICES_LOADING = 'SERVICES_LOADING';\r\nexport const SERVICES_FAILED = 'SERVICES_FAILED';\r\n\r\nexport const LOGIN_LOADING = 'LOGIN_LOADING';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const ADD_LOGINS = 'ADD_LOGINS';\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavbarToggler,\r\n  NavItem,\r\n  Collapse,\r\n  Jumbotron,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { postLogin, fetchLogin } from \"./../redux/ActionCreators\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { LOGIN_SUCCESS } from \"../redux/actionTypes\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport LoginHook from \"./hook/LoginHook\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.login,\r\n    logins: state.logins,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postLogin: (email, password) => {\r\n    dispatch(postLogin(email, password));\r\n  },\r\n  fetchLogin: () => {\r\n    dispatch(fetchLogin());\r\n  },\r\n});\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      loginMsg: \"Not Logged In\",\r\n      userName: \"\",\r\n      passWord: \"\",\r\n    };\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchLogin();\r\n    //successMess  errMess\r\n    if (this.props.login.successMess != null) {\r\n      localStorage.setItem(\"token\", this.props.login.successMess);\r\n      alert(localStorage.getItem(\"token\"));\r\n    }\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({ isNavOpen: !this.state.isNavOpen });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({ isModalOpen: !this.state.isModalOpen });\r\n  }\r\n\r\n  async handleLogin(evt) {\r\n    //this.toggleModal();\r\n\r\n    this.setState({\r\n      userName: this.username.value,\r\n      passWord: this.password.value,\r\n    });\r\n\r\n    this.props.postLogin(this.username.value, this.password.value);\r\n\r\n    //let isLogin = false;\r\n\r\n    // const l = this.props.logins.filter(\r\n    //   (l) =>\r\n    //     l.userName === this.username.value && l.passWord === this.password.value\r\n    // )[0];\r\n    // this.setState({ loginMsg: l });\r\n\r\n    // alert(\r\n    //   this.username.value +\r\n    //     \" \" +\r\n    //     this.password.value +\r\n    //     \" sucess: \" +\r\n    //     this.props.login.isLoading +\r\n    //     \" fail: \" +\r\n    //     this.props.login.errMess\r\n    // );\r\n\r\n    evt.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img\r\n                src=\"https://raw.githubusercontent.com/kambleaa007/AshITech/master/json-server/assets/images/Logo/logo.JPG\"\r\n                height=\"30\"\r\n                widtg=\"41\"\r\n                alt=\"Completo qué `Confusióne\"\r\n              />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span> About us\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact\r\n                    us\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/service\">\r\n                    <span className=\"fa fa-briefcase fa-lg\"></span> Services\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                  </Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>\r\n                  Ash\r\n                  <b>\r\n                    <i>ITechnologies</i>\r\n                  </b>\r\n                </h1>\r\n                <h4>आईटी टेक्नोलॉजीज Con Fusion`e</h4>\r\n                <p>\r\n                  We take inspiration from the world's biggest programmers cum\r\n                  jobseekers\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader> Login</ModalHeader>\r\n\r\n          <ModalBody>\r\n            {this.props.login.isLoading ? (\r\n              <div>\r\n                <Loading />\r\n              </div>\r\n            ) : (\r\n              <Form onSubmit={this.handleLogin}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    innerRef={(input) => (this.username = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    innerRef={(input) => (this.password = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      name=\"remember\"\r\n                      innerRef={(input) => (this.remember = input)}\r\n                    />\r\n                    Remember me\r\n                  </Label>\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Login\r\n                </Button>\r\n                errMess: {this.props.login.errMess}\r\n                successMess: {this.props.login.successMess}\r\n                {this.props.login.errMess != null && (\r\n                  <p key=\"1\">Error Message{this.props.login.errMess}</p>\r\n                )}\r\n                {this.props.login.successMess != null && (\r\n                  <p key=\"2\">Success Message{this.props.login.successMess}</p>\r\n                )}\r\n                {this.props.loginMsg && <p key=\"3\">{this.props.loginMsg}</p>}\r\n                UN: {this.state.userName}\r\n                PW: {this.state.passWord}\r\n              </Form>\r\n            )}\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Loading } from \"../LoadingComponent\";\r\nimport { postLogin, fetchLogin } from \"./../../redux/ActionCreators\";\r\n\r\nexport const LoginHook = (username, password) => {\r\n  const [login, setlogin] = useState({});\r\n  const [load, setLoad] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    this.props.fetchLogin();\r\n    fetch()\r\n      .then((res) => {\r\n        setlogin(res.data);\r\n        setLoad(true);\r\n      })\r\n      .catch((err) => {\r\n        setErr(err.message);\r\n      });\r\n  }, []);\r\n\r\n  if (!load) {\r\n    return (\r\n      <div>\r\n        <p>\r\n          User Loading user: {username.length}\r\n          pass: {password.length}\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Loaded Login: {this.props.login}</div>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.login,\r\n    logins: state.logins,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postLogin: (email, password) => {\r\n    dispatch(postLogin(email, password));\r\n  },\r\n  fetchLogin: () => {\r\n    dispatch(fetchLogin());\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginHook);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBIcon, MDBContainer } from 'mdbreact';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              Crystal Water Cool Bay Road<br />\r\n\t\t              AshITechnologies<br />\r\n\t\t              Pune<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>:  +91 7387441088<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +91 7387441088<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:ashishkamble191191@gmail.com\">\r\n                         ashishkamble191191@gmail.com</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/kambleaa007\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"https://www.youtube.com/channel/UC-C-ly3aSptPDO3O0vm4nHA\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-stackoverflow\" href=\"http://stackoverflow.com/users/6440372/ashish-kamble\"><i className=\"fa fa-stack-overflow\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:ashishkamble191191@gmail.com\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2019 AshITechnologies</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else return (\r\n        <div>\r\n            <FadeTransform in transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>           \r\n\r\n        {\r\n        item != null && item.image != null && item.name != null &&\r\n        <Card>\r\n            <CardImg src={item.image} alt={item.name} />\r\n            <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>                \r\n        }\r\n                \r\n            \r\n        </FadeTransform>\r\n        </div>\r\n        );\r\n    }\r\n            \r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n            \r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem>Contact us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            786, Seena Rever Water Bay Road<br />\r\n                            Clear Water Bay, Nagar<br />\r\n                            Ahmednagar<br />\r\n                            <i className=\"fa fa-phone\"></i>: +91 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +91 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                        <p>Available ... Coming Soon</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us you feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values) }>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First name\" className=\"form-control\" validators={{ required, minLength:  minLength(3), maxLength: maxLength(15)}}  />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less'}} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last name\" className=\"form-control\" validators={{ required, minLength:  minLength(3), maxLength: maxLength(15)}} />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less'}} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. number\" className=\"form-control\" validators={{ required, minLength:  minLength(3), maxLength: maxLength(15), isNumber}} />\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less', isNumber: 'Must be a number'}} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className = \"form-control\" validators={{ required, validEmail}} />\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{ required: 'Required', validEmail: 'Invalid email address'}} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map(leader => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    function RenderLeader({ leader }) {\r\n        return (\r\n            <Fade in>\r\n                <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\" >\r\n                    <Media left middle>\r\n                        <Media object src={leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        );\r\n    }\r\n\r\n    function RenderLeaders() {\r\n\r\n        if (props.leaders.isLoading) {\r\n            return <Loading />;\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return (\r\n                <h4>{props.leaders.errMess}</h4>\r\n            );\r\n        }\r\n        else return (\r\n            <Media list>\r\n                <Stagger in>\r\n                    {leaders}\r\n                </Stagger>\r\n            </Media>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 1995, Institute`con Fusion`e quickly established itself as a culinary icon par excellence in India. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in INDIA.  Featuring four of the best three-star International coders in the world, you never know what will arrive on your browser the next time you visit us.</p>\r\n                    <p>The institute traces its humble beginnings to <em>The Hot Never let Down Server</em>, a successful chain started by our CEO, Mr. Ashish, that featured for the first time the world's best websites in a world.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 1995</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">IND Fine Softwares Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">5 - 40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <RenderLeaders />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, {Component} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n\r\nexport class ModalC extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          modal: false,\r\n          nestedModal: false,\r\n          closeAll: false\r\n        };\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleNested = this.toggleNested.bind(this);\r\n        this.toggleAll = this.toggleAll.bind(this);\r\n      }\r\n    \r\n      toggle() {\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal\r\n        }));\r\n      }\r\n    \r\n      toggleNested() {\r\n        this.setState({\r\n          nestedModal: !this.state.nestedModal,\r\n          closeAll: false\r\n        });\r\n      }\r\n    \r\n      toggleAll() {\r\n        this.setState({\r\n          nestedModal: !this.state.nestedModal,\r\n          closeAll: true\r\n        });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div>\r\n            <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n              <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n              <ModalBody>\r\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                <br />\r\n                <Button color=\"success\" onClick={this.toggleNested}>Show Nested Modal</Button>\r\n                <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll ? this.toggle : undefined}>\r\n                  <ModalHeader>Nested Modal title</ModalHeader>\r\n                  <ModalBody>Stuff and things</ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.toggleNested}>Done</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.toggleAll}>All Done</Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\r\n                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default ModalC;","import React  from 'react';\r\nimport { Loading } from './../LoadingComponent';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// export default function ServiceDetails ( props, { match }) {\r\n//     if (props.isLoading) {\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     <Loading />\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n//     else {    \r\n//         const service = props.services.services.filter(service => service.id === parseInt(match.params.serviceId, 10))[0]\r\n//         return (\r\n//             <div>\r\n//                 {service}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }   \r\n\r\n// const mapStateToProps = state => {\r\n//     return {        \r\n//         services: state.services\r\n//     };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//     fetchServices: () => { dispatch(fetchServices()) }   \r\n// });\r\n\r\n// class ServDett extends Component{\r\n//     componentDidMount() {\r\n//         this.props.fetchServices();\r\n//     }\r\n\r\n// }\r\n// withRouter(connect(mapStateToProps, mapDispatchToProps)(ServDett));\r\n\r\n\r\n\r\n// export const ServiceDet = ({match},props) => {\r\n\r\n//     return(\r\n//         <div>\r\n//             {props.services.services}\r\n//         </div>\r\n//     );\r\n\r\n//     const services = props.services.services;\r\n\r\n//     if(services.isLoading){\r\n//         return(\r\n//             <Loading />\r\n//         );\r\n//     }\r\n//     const serv = services.filter(service => service.id === parseInt(match.params.serviceId, 10))[0]\r\n//     return(\r\n//         <div>\r\n//             serviceId{match.params.serviceId}\r\n//             Loaded{serv}            \r\n            \r\n//         </div>\r\n//     );\r\n\r\n// }\r\n\r\nfunction RenderService({ service }) {\r\n    return (\r\n        <FadeTransform in transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n            <Card>\r\n                <CardImg width=\"100%\" src={service.serviceImage} alt={service.serviceName} />\r\n                <CardBody>\r\n                    <CardTitle>{service.serviceName}</CardTitle>\r\n                    <CardText>{service.serviceDescription}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\nexport const ServiceDet = props => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.service) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/service'>Service</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Service Name: {props.service.serviceName}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.service.serviceName}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderService service={props.service} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <div>\r\n                            <h4>Service Category: {props.service.serviceCategory}</h4>\r\n                            <h4>Service Label: {props.service.serviceLabel}</h4>\r\n                            <h4>Service Rating: {props.service.serviceRating}</h4>\r\n                            <h4>Service Features: {props.service.featured}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                Problem in Loading id got is {props.id} service length is {props.services.length}            \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ServiceDet;","import React  from 'react';\r\nimport { Loading } from './../LoadingComponent';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Row, Col, Grid } from 'reactstrap';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nexport function RenderService({service, isLoading, errMess}){\r\n    if(isLoading){return <Loading />;}\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div key={service.id}>\r\n                <FadeTransform in transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-150%) '\r\n            }}>           \r\n\r\n            {\r\n            service != null &&   \r\n                   \r\n                <Card body outline color=\"secondary\">\r\n                    <Link to={`/service/${service.id}`}>\r\n                    <p>Service Number: </p>{service.id}\r\n                    <CardImg width=\"100px\" src={service.serviceImage} alt={service.serviceName} />\r\n                    <CardBody>\r\n                        Service Name: <CardTitle>{service.serviceName}</CardTitle>\r\n                        Service Category: {service.serviceCategory ? <CardSubtitle>{service.serviceCategory}</CardSubtitle> : null}\r\n                        Service Label: {service.serviceLabel ? <CardSubtitle>{service.serviceLabel}</CardSubtitle> : null}\r\n                        Service Rating: {service.serviceRating ? <CardSubtitle>{service.serviceRating}</CardSubtitle> : null}\r\n                        Service Description: <CardText>{service.serviceDescription}</CardText>\r\n                    </CardBody>\r\n                    </Link>\r\n                </Card> \r\n                                   \r\n            }                    \r\n                \r\n            </FadeTransform>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchServices } from './../../redux/ActionCreators';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Row, Col, Grid, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport { FadeTransform } from 'react-animation-components';\r\nimport { Loading } from './../LoadingComponent';\r\nimport { ModalC } from './Modal';\r\nimport { ServiceDet } from './ServiceDetails';\r\nimport { RenderService } from './RenderService';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        services: state.services\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({    \r\n    fetchServices: () => { dispatch(fetchServices()) }    \r\n});\r\n\r\n\r\n\r\nexport class Service extends Component{\r\n\r\n    componentDidMount(){\r\n        //this.props.fetchServices();\r\n    }\r\n\r\n    render(){\r\n\r\n        const service = this.props.services.services.map((i)=>{\r\n            return(                \r\n            <Col sm=\"3\" key={i.id}>                        \r\n                <RenderService service={i} isLoading={this.props.services.isLoading} errMess={this.props.services.errMess} />\r\n            </Col>   \r\n            );                    \r\n        });        \r\n        \r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Service</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n\r\n                    {/* \r\n                        <div >services works</div>                    \r\n                    */}\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n\r\n                    <ModalC buttonLabel = \"Window Click\" className=\"modal-90w\"/>\r\n\r\n                </div>\r\n                \r\n                <Row>{ service }</Row>\r\n\r\n                    {/* \r\n                    <Route path={`${this.props.match.path}/:serviceId`} component={()=><ServiceDet services={ this.props.services } />} />\r\n                    <Route path={`${this.props.match.path}/inService`} component={()=><div>Loaded in Service !!!</div>} /> \r\n                    <Route path={`${this.props.match.path}/:serviceId`} component={()=><ServiceDet services={ this.props.services } />} /> \r\n                    */}\r\n\r\n                   \r\n                    \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Service);    \r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TestHook() {\r\n  const [state, setState] = useState(\"initialState\");\r\n\r\n  return <div>Hook Rendered!!!</div>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishDetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Service from \"./service/ServiceComponent\";\r\nimport { ServiceDet } from \"./service/ServiceDetails\";\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  postComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n  postFeedback,\r\n  fetchServices,\r\n} from \"../redux/ActionCreators\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport TestHook from \"./hook/TestHook\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n    services: state.services,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchPromos: () => {\r\n    dispatch(fetchPromos());\r\n  },\r\n  fetchComments: () => {\r\n    dispatch(fetchComments());\r\n  },\r\n  fetchLeaders: () => {\r\n    dispatch(fetchLeaders());\r\n  },\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n  fetchServices: () => {\r\n    dispatch(fetchServices());\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n    this.props.fetchServices();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(\r\n              (promo) => promo.featured\r\n            )[0]\r\n          }\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter((leader) => leader.featured)[0]\r\n          }\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    const ServiceWithId = ({ match }) => {\r\n      return (\r\n        <ServiceDet\r\n          service={\r\n            this.props.services.services.filter(\r\n              (s) => s.id === parseInt(match.params.serviceId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.services.isLoading}\r\n          errMess={this.props.services.errMess}\r\n          id={parseInt(match.params.serviceId, 10)}\r\n          services={this.props.services.services}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TestHook />\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={this.props.location.key}\r\n            classNames=\"page\"\r\n            timeout={300}\r\n          >\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route\r\n                  exact\r\n                  path=\"/menu\"\r\n                  component={() => <Menu dishes={this.props.dishes} />}\r\n                />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route\r\n                  exact\r\n                  path=\"/contactus\"\r\n                  component={() => (\r\n                    <Contact\r\n                      resetFeedbackForm={this.props.resetFeedbackForm}\r\n                      postFeedback={this.props.postFeedback}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/aboutus\"\r\n                  component={() => <About leaders={this.props.leaders} />}\r\n                />\r\n                <Route exact path=\"/service\" component={() => <Service />} />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/service/:serviceId\"\r\n                  component={ServiceWithId}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/service/inService\"\r\n                  component={() => <div>Loaded in Service !!!</div>}\r\n                />\r\n\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './actionTypes';   \r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, dishes: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, isLoading: false, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, comments: [] };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] };\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, promotions: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Services = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    services: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_SERVICES:\r\n            return { ...state, isLoading: false, errMess: null, services: action.payload };\r\n\r\n        case ActionTypes.SERVICES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, services: [] };\r\n\r\n        case ActionTypes.ADD_SERVICE:\r\n            var service = action.payload;\r\n            return { ...state, services: state.services.concat(service) };\r\n\r\n        case ActionTypes.SERVICES_LOADING:\r\n                return { ...state, isLoading: true, errMess: null, services: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Login = (state = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    logins: [],\r\n    successMess: null\r\n}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.LOGIN_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, logins: [] };\r\n\r\n        case ActionTypes.LOGIN_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, logins: [] };\r\n\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            return { ...state, isLoading: false, errMess: null, successMess: action.payload};\r\n            \r\n        case ActionTypes.ADD_LOGINS:\r\n            return { ...state, isLoading: false, errMess: null, logins: action.payload };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { Services } from './services';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\nimport { Login } from './login';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            services: Services,\r\n            login: Login,\r\n            ...createForms({feedback: InitialFeedback})\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div>\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}